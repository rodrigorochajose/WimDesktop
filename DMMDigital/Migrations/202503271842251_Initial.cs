namespace DMMDigital.Migrations
{
    using System.Data.Entity.Migrations;
    
    public partial class Initial : DbMigration
    {
        public override void Up()
        {
            Sql(@"CREATE TABLE CLINIC (
					ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
					NAME VARCHAR(130) CHARACTER SET UTF8 NOT NULL,
					EMAIL VARCHAR(130) CHARACTER SET UTF8 NOT NULL,
					PASSWORD VARCHAR(300) CHARACTER SET UTF8 NOT NULL,
					CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
					KEEP_CONNECTED INTEGER DEFAULT 0 NOT NULL,
					AUTOMATIC_LOGIN INTEGER DEFAULT 0 NOT NULL
				);"
			);

            Sql(@"CREATE TABLE SENSOR (
					ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
					NAME VARCHAR(100) CHARACTER SET UTF8 NOT NULL,
					NICKNAME VARCHAR(100) CHARACTER SET UTF8 NOT NULL,
					WIDTH FLOAT NOT NULL,
					HEIGHT FLOAT NOT NULL,
					CONSTRAINT SENSOR_PK PRIMARY KEY (ID)
				);"
			);

            Sql(@"CREATE TABLE SETTINGS (
					ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
					LANGUAGE VARCHAR(10) CHARACTER SET UTF8 NOT NULL,
					SENSOR_PATH VARCHAR(300) CHARACTER SET UTF8 NOT NULL,
					EXAM_PATH VARCHAR(300) CHARACTER SET UTF8 NOT NULL,
					EXPORT_PATH VARCHAR(300) CHARACTER SET UTF8,
					SENSOR_MODEL VARCHAR(100) CHARACTER SET UTF8 NOT NULL,
					ACQUIRE_MODE INTEGER NOT NULL,
					DRAWING_COLOR VARCHAR(100) CHARACTER SET UTF8 NOT NULL,
					DRAWING_SIZE INTEGER NOT NULL,
					TEXT_COLOR VARCHAR(100) CHARACTER SET UTF8 NOT NULL,
					TEXT_SIZE INTEGER NOT NULL,
					RULER_COLOR VARCHAR(100) CHARACTER SET UTF8 NOT NULL,
					FILTER_BRIGHTNESS NUMERIC(9,2) NOT NULL,
					FILTER_CONTRAST NUMERIC(9,2) NOT NULL,
					FILTER_REVEAL NUMERIC(9,2) NOT NULL,
					FILTER_SMART_SHARPEN NUMERIC(9,2) NOT NULL
				);"
			);

            Sql(@"CREATE TABLE TEMPLATE (
					ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
					NAME VARCHAR(100) CHARACTER SET UTF8 NOT NULL,
					CONSTRAINT TEMPLATE_PK PRIMARY KEY (ID)
				);"
			);

            Sql(@"CREATE TABLE TEMPLATE_FRAME (
					ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
					TEMPLATE_ID INTEGER NOT NULL,
					ORDINATION INTEGER NOT NULL,
					LOCATION_X INTEGER NOT NULL,
					LOCATION_Y INTEGER NOT NULL,
					ORIENTATION INTEGER NOT NULL,
					CONSTRAINT TEMPLATE_FRAME_PK PRIMARY KEY (ID),
					CONSTRAINT TEMPLATE_FRAME_FK FOREIGN KEY (TEMPLATE_ID) REFERENCES TEMPLATE(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
				);"
			);

            Sql(@"CREATE TABLE PATIENT (
					ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
					NAME VARCHAR(130) CHARACTER SET UTF8 NOT NULL,
					BIRTH_DATE DATE NOT NULL,
					PHONE VARCHAR(12),
					RECOMMENDATION VARCHAR(100) CHARACTER SET UTF8,
					OBSERVATION VARCHAR(300) CHARACTER SET UTF8,
					CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
					CONSTRAINT PACIENTE_PK PRIMARY KEY (ID)
				);"
			);

            Sql(@"CREATE TABLE EXAM (
					ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
					PATIENT_ID INTEGER NOT NULL,
					TEMPLATE_ID INTEGER NOT NULL,
					SESSION_NAME VARCHAR(100) CHARACTER SET UTF8,
					CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
					UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
					CONSTRAINT EXAM_PK PRIMARY KEY (ID),
					CONSTRAINT EXAM_FK FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
					CONSTRAINT EXAM_FK_1 FOREIGN KEY (TEMPLATE_ID) REFERENCES TEMPLATE(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
				);"
			);

            Sql(@"CREATE TABLE EXAM_IMAGE (
					ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
					EXAM_ID INTEGER NOT NULL,
					TEMPLATE_FRAME_ID INTEGER NOT NULL,
					FILE VARCHAR(250) CHARACTER SET UTF8 NOT NULL,
					NOTES VARCHAR(250) CHARACTER SET UTF8,
					CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
					CONSTRAINT EXAM_IMAGE_PK PRIMARY KEY (ID),
					CONSTRAINT EXAM_IMAGE_FK FOREIGN KEY (EXAM_ID) REFERENCES EXAM(ID) ON DELETE NO ACTION ON UPDATE NO ACTION ,
					CONSTRAINT EXAM_IMAGE_FK_1 FOREIGN KEY (TEMPLATE_FRAME_ID) REFERENCES TEMPLATE_FRAME(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
				);"
			);

            Sql(@"CREATE TABLE EXAM_IMAGE_DRAWING (
					ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
					EXAM_ID INTEGER NOT NULL,
					EXAM_IMAGE_ID INTEGER NOT NULL,
					DRAWING_COLOR VARCHAR(100) NOT NULL,
					DRAWING_SIZE INTEGER NOT NULL,
					DRAWING_TYPE VARCHAR(100) CHARACTER SET UTF8 NOT NULL,
					DRAWING_TEXT VARCHAR(100) CHARACTER SET UTF8,
					CONSTRAINT EXAM_IMAGE_DRAWING_PK PRIMARY KEY (ID),
					CONSTRAINT EXAM_IMAGE_DRAWING_FK FOREIGN KEY (EXAM_ID) REFERENCES EXAM(ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
					CONSTRAINT EXAM_IMAGE_DRAWING_FK_1 FOREIGN KEY (EXAM_IMAGE_ID) REFERENCES EXAM_IMAGE(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
				);"
			);

            Sql(@"CREATE TABLE EXAM_IMAGE_DRAWING_POINTS (
					ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
					EXAM_IMAGE_DRAWING_ID INTEGER NOT NULL,
					POINT_X INTEGER NOT NULL,
					POINT_Y INTEGER NOT NULL,
					CONSTRAINT EXAM_IMAGE_DRAWING_POINTS_PK PRIMARY KEY (ID),
					CONSTRAINT EXAM_IMAGE_DRAWING_POINTS_FK_1 FOREIGN KEY (EXAM_IMAGE_DRAWING_ID) REFERENCES EXAM_IMAGE_DRAWING(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
				);"
			);

            Sql(@"CREATE TABLE RULER_LENGTH (
					ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
					EXAM_IMAGE_DRAWING_ID INTEGER NOT NULL,
					LINE_LENGTH FLOAT NOT NULL,
					CONSTRAINT RULER_LINE_LENGTH_PK PRIMARY KEY (ID),
					CONSTRAINT RULER_LINE_LENGTH_FK FOREIGN KEY (EXAM_IMAGE_DRAWING_ID) REFERENCES EXAM_IMAGE_DRAWING(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
				);"
			);
        }

        public override void Down()
        {
            Sql("DROP TABLE RULER_LENGTH;");
            Sql("DROP TABLE EXAM_IMAGE_DRAWING_POINTS;");
            Sql("DROP TABLE EXAM_IMAGE_DRAWING;");
            Sql("DROP TABLE EXAM_IMAGE;");
            Sql("DROP TABLE EXAM;");
            Sql("DROP TABLE PATIENT;");
            Sql("DROP TABLE TEMPLATE_FRAME;");
            Sql("DROP TABLE TEMPLATE;");
            Sql("DROP TABLE SETTINGS;");
            Sql("DROP TABLE SENSOR;");
            Sql("DROP TABLE CLINIC;");
        }
    }
}
